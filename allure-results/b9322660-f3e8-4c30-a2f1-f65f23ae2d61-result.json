{"name": "test_invalid_login_incorrect_password[abc@gmail.com-wrongpassword]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=135.0.7049.96)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7EA815355+78597]\n\tGetHandleVerifier [0x00007FF7EA8153B0+78688]\n\t(No symbol) [0x00007FF7EA5C91AA]\n\t(No symbol) [0x00007FF7EA5C5BA0]\n\t(No symbol) [0x00007FF7EA5B6849]\n\t(No symbol) [0x00007FF7EA5B85A8]\n\t(No symbol) [0x00007FF7EA5B6B56]\n\t(No symbol) [0x00007FF7EA5B65D6]\n\t(No symbol) [0x00007FF7EA5B629A]\n\t(No symbol) [0x00007FF7EA5B3F4A]\n\t(No symbol) [0x00007FF7EA5B471C]\n\t(No symbol) [0x00007FF7EA5CD07A]\n\t(No symbol) [0x00007FF7EA67002E]\n\t(No symbol) [0x00007FF7EA6470EA]\n\t(No symbol) [0x00007FF7EA66F2BB]\n\t(No symbol) [0x00007FF7EA646EC3]\n\t(No symbol) [0x00007FF7EA6103F8]\n\t(No symbol) [0x00007FF7EA611163]\n\tGetHandleVerifier [0x00007FF7EAABEF0D+2870973]\n\tGetHandleVerifier [0x00007FF7EAAB96B8+2848360]\n\tGetHandleVerifier [0x00007FF7EAAD6993+2967875]\n\tGetHandleVerifier [0x00007FF7EA83019A+188746]\n\tGetHandleVerifier [0x00007FF7EA83847F+222255]\n\tGetHandleVerifier [0x00007FF7EA81D2D4+111236]\n\tGetHandleVerifier [0x00007FF7EA81D482+111666]\n\tGetHandleVerifier [0x00007FF7EA8035A9+5465]\n\tBaseThreadInitThunk [0x00007FFC51EC259D+29]\n\tRtlUserThreadStart [0x00007FFC53EAAF38+40]", "trace": "username = 'abc@gmail.com', password = 'wrongpassword'\n\n    @pytest.mark.parametrize(\"username, password\", [(\"abc@gmail.com\", \"wrongpassword\")])\n    def test_invalid_login_incorrect_password(username, password):\n        driver_path = r\"C:\\Users\\Santhosh J\\Desktop\\vir\\chromedriver-win64\\chromedriver.exe\"\n        service = Service(driver_path)\n        driver = webdriver.Chrome(service=service)\n    \n        try:\n            login_to_flask_shop(driver, \"http://127.0.0.1:5000\", username, password)\n            assert driver.current_url == \"http://127.0.0.1:5000/login\", \"Login should fail with incorrect password.\"\n        except Exception as e:\n            take_screenshot(driver, \"test_invalid_login_incorrect_password\")\n>           raise e\n\nlogin_test.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nlogin_test.py:79: in test_invalid_login_incorrect_password\n    login_to_flask_shop(driver, \"http://127.0.0.1:5000\", username, password)\nlogin_test.py:24: in login_to_flask_shop\n    driver.get(f\"{base_url}/login\")\nvir\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in get\n    self.execute(Command.GET, {\"url\": url})\nvir\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000029DDD698F50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...EA8035A9+5465]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC51EC259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFC53EAAF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=135.0.7049.96)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7EA815355+78597]\nE       \tGetHandleVerifier [0x00007FF7EA8153B0+78688]\nE       \t(No symbol) [0x00007FF7EA5C91AA]\nE       \t(No symbol) [0x00007FF7EA5C5BA0]\nE       \t(No symbol) [0x00007FF7EA5B6849]\nE       \t(No symbol) [0x00007FF7EA5B85A8]\nE       \t(No symbol) [0x00007FF7EA5B6B56]\nE       \t(No symbol) [0x00007FF7EA5B65D6]\nE       \t(No symbol) [0x00007FF7EA5B629A]\nE       \t(No symbol) [0x00007FF7EA5B3F4A]\nE       \t(No symbol) [0x00007FF7EA5B471C]\nE       \t(No symbol) [0x00007FF7EA5CD07A]\nE       \t(No symbol) [0x00007FF7EA67002E]\nE       \t(No symbol) [0x00007FF7EA6470EA]\nE       \t(No symbol) [0x00007FF7EA66F2BB]\nE       \t(No symbol) [0x00007FF7EA646EC3]\nE       \t(No symbol) [0x00007FF7EA6103F8]\nE       \t(No symbol) [0x00007FF7EA611163]\nE       \tGetHandleVerifier [0x00007FF7EAABEF0D+2870973]\nE       \tGetHandleVerifier [0x00007FF7EAAB96B8+2848360]\nE       \tGetHandleVerifier [0x00007FF7EAAD6993+2967875]\nE       \tGetHandleVerifier [0x00007FF7EA83019A+188746]\nE       \tGetHandleVerifier [0x00007FF7EA83847F+222255]\nE       \tGetHandleVerifier [0x00007FF7EA81D2D4+111236]\nE       \tGetHandleVerifier [0x00007FF7EA81D482+111666]\nE       \tGetHandleVerifier [0x00007FF7EA8035A9+5465]\nE       \tBaseThreadInitThunk [0x00007FFC51EC259D+29]\nE       \tRtlUserThreadStart [0x00007FFC53EAAF38+40]\n\nvir\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "attachments": [{"name": "stdout", "source": "2a2316ba-22b9-45aa-8063-034a482033d8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'abc@gmail.com'"}, {"name": "password", "value": "'wrongpassword'"}], "start": 1745128822631, "stop": 1745128830255, "uuid": "f4e167d9-dd7c-45e6-a36e-d12ab8ff1636", "historyId": "aebcc8659b5717dc04c2b2aa586aa2f5", "testCaseId": "82acd22f17ad22a6fb809c7e16f213ee", "fullName": "login_test#test_invalid_login_incorrect_password", "labels": [{"name": "suite", "value": "login_test"}, {"name": "host", "value": "LAPTOP-SCKRTIMM"}, {"name": "thread", "value": "28240-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "login_test"}]}