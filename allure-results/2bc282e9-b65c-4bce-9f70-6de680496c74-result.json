{"name": "test_valid_search_functionality", "status": "failed", "statusDetails": {"message": "AssertionError: Test failed: Message: \n  Stacktrace:\n  \tGetHandleVerifier [0x00007FF744FB5355+78597]\n  \tGetHandleVerifier [0x00007FF744FB53B0+78688]\n  \t(No symbol) [0x00007FF744D691AA]\n  \t(No symbol) [0x00007FF744DBF149]\n  \t(No symbol) [0x00007FF744DBF3FC]\n  \t(No symbol) [0x00007FF744E12467]\n  \t(No symbol) [0x00007FF744DE712F]\n  \t(No symbol) [0x00007FF744E0F2BB]\n  \t(No symbol) [0x00007FF744DE6EC3]\n  \t(No symbol) [0x00007FF744DB03F8]\n  \t(No symbol) [0x00007FF744DB1163]\n  \tGetHandleVerifier [0x00007FF74525EF0D+2870973]\n  \tGetHandleVerifier [0x00007FF7452596B8+2848360]\n  \tGetHandleVerifier [0x00007FF745276993+2967875]\n  \tGetHandleVerifier [0x00007FF744FD019A+188746]\n  \tGetHandleVerifier [0x00007FF744FD847F+222255]\n  \tGetHandleVerifier [0x00007FF744FBD2D4+111236]\n  \tGetHandleVerifier [0x00007FF744FBD482+111666]\n  \tGetHandleVerifier [0x00007FF744FA35A9+5465]\n  \tBaseThreadInitThunk [0x00007FFC51EC259D+29]\n  \tRtlUserThreadStart [0x00007FFC53EAAF38+40]\n  \nassert False", "trace": "setup_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"84ec0338730ff99e18c58f0f6631f1dd\")>\n\n    def test_valid_search_functionality(setup_browser):\n        driver = setup_browser\n        try:\n            search_input = WebDriverWait(driver, 20).until(\n                EC.presence_of_element_located((By.CSS_SELECTOR, 'input[type=\"search\"][name=\"query\"]'))\n            )\n            search_input.send_keys(\"laptop\")\n            search_button = driver.find_element(By.CSS_SELECTOR, 'input[type=\"submit\"][value=\"Search\"]')\n            search_button.click()\n    \n            # Wait for the results and assert if the page source contains the term \"laptop\"\n>           WebDriverWait(driver, 20).until(\n                EC.presence_of_element_located((By.TAG_NAME, \"h1\"))  # Example of waiting for any results page to load\n            )\n\nsearch_functionality_test.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"84ec0338730ff99e18c58f0f6631f1dd\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001B9DFBC2CA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF744FB5355+78597]\nE       \tGetHandleVerifier [0x00007FF744FB53B0+78688]\nE       \t(No symbol) [0x00007FF744D691AA]\nE       \t(No symbol) [0x00007FF744DBF149]\nE       \t(No symbol) [0x00007FF744DBF3FC]\nE       \t(No symbol) [0x00007FF744E12467]\nE       \t(No symbol) [0x00007FF744DE712F]\nE       \t(No symbol) [0x00007FF744E0F2BB]\nE       \t(No symbol) [0x00007FF744DE6EC3]\nE       \t(No symbol) [0x00007FF744DB03F8]\nE       \t(No symbol) [0x00007FF744DB1163]\nE       \tGetHandleVerifier [0x00007FF74525EF0D+2870973]\nE       \tGetHandleVerifier [0x00007FF7452596B8+2848360]\nE       \tGetHandleVerifier [0x00007FF745276993+2967875]\nE       \tGetHandleVerifier [0x00007FF744FD019A+188746]\nE       \tGetHandleVerifier [0x00007FF744FD847F+222255]\nE       \tGetHandleVerifier [0x00007FF744FBD2D4+111236]\nE       \tGetHandleVerifier [0x00007FF744FBD482+111666]\nE       \tGetHandleVerifier [0x00007FF744FA35A9+5465]\nE       \tBaseThreadInitThunk [0x00007FFC51EC259D+29]\nE       \tRtlUserThreadStart [0x00007FFC53EAAF38+40]\n\nvir\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nsetup_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"84ec0338730ff99e18c58f0f6631f1dd\")>\n\n    def test_valid_search_functionality(setup_browser):\n        driver = setup_browser\n        try:\n            search_input = WebDriverWait(driver, 20).until(\n                EC.presence_of_element_located((By.CSS_SELECTOR, 'input[type=\"search\"][name=\"query\"]'))\n            )\n            search_input.send_keys(\"laptop\")\n            search_button = driver.find_element(By.CSS_SELECTOR, 'input[type=\"submit\"][value=\"Search\"]')\n            search_button.click()\n    \n            # Wait for the results and assert if the page source contains the term \"laptop\"\n            WebDriverWait(driver, 20).until(\n                EC.presence_of_element_located((By.TAG_NAME, \"h1\"))  # Example of waiting for any results page to load\n            )\n            assert \"laptop\" in driver.page_source.lower(), \"Search results for 'laptop' not found.\"\n        except Exception as e:\n            capture_screenshot(driver, \"valid_search_failed\")  # Capture screenshot on failure\n>           assert False, f\"Test failed: {str(e)}\"\nE           AssertionError: Test failed: Message: \nE             Stacktrace:\nE             \tGetHandleVerifier [0x00007FF744FB5355+78597]\nE             \tGetHandleVerifier [0x00007FF744FB53B0+78688]\nE             \t(No symbol) [0x00007FF744D691AA]\nE             \t(No symbol) [0x00007FF744DBF149]\nE             \t(No symbol) [0x00007FF744DBF3FC]\nE             \t(No symbol) [0x00007FF744E12467]\nE             \t(No symbol) [0x00007FF744DE712F]\nE             \t(No symbol) [0x00007FF744E0F2BB]\nE             \t(No symbol) [0x00007FF744DE6EC3]\nE             \t(No symbol) [0x00007FF744DB03F8]\nE             \t(No symbol) [0x00007FF744DB1163]\nE             \tGetHandleVerifier [0x00007FF74525EF0D+2870973]\nE             \tGetHandleVerifier [0x00007FF7452596B8+2848360]\nE             \tGetHandleVerifier [0x00007FF745276993+2967875]\nE             \tGetHandleVerifier [0x00007FF744FD019A+188746]\nE             \tGetHandleVerifier [0x00007FF744FD847F+222255]\nE             \tGetHandleVerifier [0x00007FF744FBD2D4+111236]\nE             \tGetHandleVerifier [0x00007FF744FBD482+111666]\nE             \tGetHandleVerifier [0x00007FF744FA35A9+5465]\nE             \tBaseThreadInitThunk [0x00007FFC51EC259D+29]\nE             \tRtlUserThreadStart [0x00007FFC53EAAF38+40]\nE             \nE           assert False\n\nsearch_functionality_test.py:78: AssertionError"}, "attachments": [{"name": "stdout", "source": "639f90a4-3fcd-4d52-bce6-64007008cb3e-attachment.txt", "type": "text/plain"}], "start": 1745078330497, "stop": 1745078350994, "uuid": "0a4422eb-6236-4388-9a81-9de2d9d19622", "historyId": "9e5538c475b80d3dd0432b1f7b921bd6", "testCaseId": "9e5538c475b80d3dd0432b1f7b921bd6", "fullName": "search_functionality_test#test_valid_search_functionality", "labels": [{"name": "suite", "value": "search_functionality_test"}, {"name": "host", "value": "LAPTOP-SCKRTIMM"}, {"name": "thread", "value": "47704-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "search_functionality_test"}]}